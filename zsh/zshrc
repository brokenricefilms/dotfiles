if command -v tmux &> /dev/null && [ -n "$PS1" ] \
    && [[ ! "$TERM" =~ screen ]] \
    && [[ ! "$TERM" =~ tmux ]] \
    && [ -z "$TMUX" ]; then
    exec tmux
fi

nvm() {
    echo "ðŸš¨ NVM not loaded! Loading now..."
    unset -f nvm
    export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm "$@"
}

set -U EDITOR nvim
# debian base
# export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
# arch base | fedora
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export EDITOR='nvim'
export VISUAL='nvim'
export PATH="$HOME/.npm/bin:$PATH"

export PATH="$HOME/.gem/ruby/2.7.0/bin:$PATH"
export PATH="$HOME/.local/share/gem/ruby/3.0.0/bin:$PATH"
export PATH="$HOME/gems/bin:$PATH"
export PATH="$PATH:/opt/mssql-tools/bin"
export PATH=$PATH:~/.local/bin
export GEM_HOME="$HOME/gems"

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' rehash true
zstyle ':completion:*' accept-exact '*(N)'
WORDCHARS=${WORDCHARS//\/[&.;]}

autoload -U colors && colors
eval "$(starship init zsh)"

setopt histignorealldups sharehistory
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history

bindkey -v

function zle-keymap-select {
if [[ ${KEYMAP} == vicmd ]] ||
    [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
elif [[ ${KEYMAP} == main ]] ||
    [[ ${KEYMAP} == viins ]] ||
    [[ ${KEYMAP} = '' ]] ||
    [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
fi
}

zle -N zle-keymap-select
zle-line-init() {
zle -K viins
echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q'
preexec() { echo -ne '\e[5 q' ;}

autoload -Uz compinit
compinit

mk () {
    if [ ! -n "$1" ]; then
        echo "Enter a directory name"
    elif [ -d $1 ]; then
        echo "\`$1' already exists"
        cd $1
    else
        mkdir -p $1 && cd $1
    fi
}

bmi () {
    python3 ~/dotfiles/zsh/functions/bmi.py
}

tv () {
    bash ~/dotfiles/zsh/functions/tv.sh
}

u () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.rar)      unrar x $1                          ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

24-bit-color () {
bash ~/dotfiles/zsh/functions/24-bit-color.sh
}

print256colours () {
    bash ~/dotfiles/zsh/functions/print256colours.sh
}

showTrueColor () {
    bash ~/dotfiles/zsh/functions/showTrueColor.sh
}

dl () {
    cd ~/Downloads
    aria2c $argv
    ls -lah ~/Downloads
    cd -
}

run () {
    if ls $argv | grep ".cpp"
    then
        g++ $argv
        ./a.out
        rm a.out
    elif ls $argv | grep ".c"
    then
        gcc $argv
        ./a.out
        rm a.out
    fi
}

cpppro () {
    mkdir $argv
    cd $argv
    cp -r ~/.config/nvim/stuff/cpppro/* .
    nvim -O *
}

r () {
    while true
    do
        $argv
        sleep 1
    done
}

SERVER_IP () {
    hostname -I
}

se () {
    browser-sync start --server --files . --no-notify --host SERVER_IP --port 9000
}

alias l='clear ; exa -al --color=always --group-directories-first --icons'
alias ls='clear ; exa -al --color=always --group-directories-first --icons'
alias sl='clear ; exa -al --color=always --group-directories-first --icons'
alias la='clear ; exa -a --color=always --group-directories-first --icons'
alias l.='clear ; exa -a| egrep "^\."'
alias ll='clear ; exa -l --color=always --group-directories-first --icons'
alias lt='clear ; exa -aT --color=always --group-directories-first --icons'

alias cpf='xclip -sel clip'
alias re='source ~/.zshrc ; tmux source-file ~/.tmux.conf'
alias h='htop'
alias e='exit'
alias :q='exit'
alias q='exit'
alias p='ipython3'
alias rbn='sudo reboot now'
alias sdn='sudo shutdown now'
alias ka='killall'
alias v='nvim'
alias 777='chmod -R 777'
alias x='chmod +x'
alias colorPicker='zenity --color-selection'
# debian
# alias cat='batcat'
# arch | fedora
alias cat='bat'
export GREP_COLOR='1;31'
alias grep='grep --color=auto'
alias n='nnn -de'

# music stuff
alias m='mpv --shuffle ~/Music/*'

# ubuntu apt
# alias ins='sudo apt install -y'
# alias uins='sudo apt remove -y'

# termux pkg
# alias ins='pkg install -y'
# alias uins='pkg remove -y'

# fedora dnf
alias ins='sudo dnf -y install'
alias uins='sudo dnf -y remove'

# arch
# alias ins='sudo pacman -S --noconfirm'
# alias ins2='yay -S --noconfirm'
# alias uins='sudo pacman -Rs --noconfirm'

alias ide='tmux split-window -v -p 20 ; tmux split-window -h -p 50 ; tmux last-pane ; nvim'
# alias ide='tmux split-window -v -p 8 ; tmux last-pane ; nvim'
# alias ide='tmux split-window -h -p 30 ; tmux split-window -v -p 75 ; tmux last-pane ; nvim'
alias qa='tmux kill-session -a ; cowsay "All session deleted" ; tmux ls'

alias ..='cd .. ; clear ; l'
alias ...='cd .. ; cd .. ; clear ; l'
alias dow='cd ~/Downloads ; clear ; l'
alias doc='cd ~/Documents ; clear ; l'

alias yt='youtube-dl -f bestvideo+bestaudio'
alias yta='youtube-dl -f "bestaudio" --continue --no-overwrites --ignore-errors --extract-audio --audio-format mp3 -o "%(title)s.%(ext)s"'

alias t='trash'
alias tdow='trash ~/Downloads/*'

# debian
# export FZF_DEFAULT_COMMAND='fdfind --type f'
# export FZF_DEFAULT_COMMAND='fdfind --type f --follow --exclude .git --exclude undodir --exclude gems'
# arch | termux | fedora
export FZF_DEFAULT_COMMAND='fd --type f --follow --exclude .git --exclude undodir --exclude gems'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d"

alias ej="emoji-fzf preview --prepend | fzf-down | awk '{ print \$1 }' | xclip -selection c"

fzf-down() {
fzf --height 50% --min-height 20 --bind ctrl-/:toggle-preview "$@" --reverse
}

f() {
    cd ~/
    nvim -o "$(fzf-down --preview 'bat --style=numbers --color=always --line-range :500 {}')"
}

c () {
    local dir
    dir=$(fd -t d . $HOME --exclude gems | fzf-down) &&
        cd "$dir"
            l
        }

    is_in_git_repo() {
        git rev-parse HEAD > /dev/null 2>&1
    }

co () {
    is_in_git_repo || return
    git branch -a | fzf-down | xargs git checkout
}

o() {
    cd ~/
    xdg-open "$(fzf-down --preview 'bat --style=numbers --color=always --line-range :500 {}')"
    cd -
}

autoCommit () {
    is_in_git_repo || return
    git add -A
    git commit -m "[ðŸ‘ŒAuto commit] $(curl -s whatthecommit.com/index.txt)"
}

alias st='git status -sb'
alias add='git add'
alias push="git push"
alias pull="git pull"
alias cm='git commit'
alias dt='git difftool'

gc () {
    git_dir="$(basename "$1" .git)"
    git_dir_resolved=${2:-$git_dir}
    git clone "$@" && cd "$git_dir_resolved";
}

prettierCpp () {
    clang-format --style=Google -i $(find -name '*.h' && find -name '*.cpp')
}

ok () {
    is_in_git_repo || return
    st
    autoCommit
    push
}

alias ghok='cd ~/syns/ok ; okp ; cd -'
alias ghnote='cd ~/syns/note ; ok ; cd -'
alias glok='cd ~/syns/ok ; pull ; cd -'
alias glnote='cd ~/syns/note ;  pull ; cd -'

alias browser='xdg-open'
alias github='browser --new-window "https://github.com/thuanpham2311"'
alias browser_fb='browser https://facebook.com'
alias browser_mes='browser "https://www.facebook.com/messages/t/thuanpham2311"'
alias browser_mail0='browser "https://mail.google.com/mail/u/0/#inbox"'
alias browser_mail1='browser "https://mail.google.com/mail/u/1/#inbox"'
alias browser_mail2='browser "https://mail.google.com/mail/u/2/#inbox"'
alias browser_stu='browser "http://stu.edu.vn/"'
alias browser_stu2='browser "http://stu.edu.vn/vi/393/thong-bao.html"'
alias browser_youtube_subsriptions='browser "https://www.youtube.com/feed/subscriptions"'
alias browser_feedly='browser "https://feedly.com/i/collection/content/user/0d89157e-ce7d-4b2c-a2d6-98826f1e5089/category/global.all"'

function :t() {
browser "https://translate.google.com/?source=osdd#auto|auto|$argv"
}

function :y() {
browser "https://www.youtube.com/results?search_query=$argv"
}

function :d() {
browser "https://duckduckgo.com/?q=$argv"
}

function :gm() {
browser "https://www.google.com/maps?q=$argv"
}

function :g() {
browser "https://www.google.com/search?q=$argv"
}

function :gh() {
browser "https://github.com/search?q=$argv"
}

function :f() {
browser "https://www.facebook.com/search?q=$argv"
}

browser_daily () {
    cowsay "GET.SHIT.DONE"
    browser_youtube_subsriptions
    browser_feedly
    browser_mail0
    browser_mail1
    browser_fb
    browser_stu
    browser_stu2
    firefox "facebook.com"
}

hi () {
    browser_daily
    sleep 30
    update
}

update () {
    nvim -c "PlugUpdate | qa"
    nvim -c "CocUpdateSync | qa"
    npm update -g
    npm install -g npm
    gem update neovim
    tldr --update

    # arch base
    # sudo pacman -Syu --noconfirm
    # yay -Sua --noconfirm

    # debian base (ubuntu, kali,...)
    # sudo apt update
    # sudo apt upgrade -y
    # sudo apt autoremove -y
    # sudo apt autoclean
    flatpak update -y

    # rehat base (fedora)
    sudo dnf update -y
    sudo dnf autoremove -y

    # termux
    # pkg update
    # pkg upgrade -y

    cd ~ ; clear ; neofetch
}

source ~/dotfiles/zsh/functions/zsh-autosuggestions.zsh
source ~/dotfiles/zsh/functions/completion.zsh
source ~/dotfiles/zsh/functions/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/dotfiles/zsh/functions/fzf-key-bindings.zsh
source ~/dotfiles/zsh/functions/themeControl.zsh
