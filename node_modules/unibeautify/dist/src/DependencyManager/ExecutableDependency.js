"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Dependency_1 = require("./Dependency");
class ExecutableDependency extends Dependency_1.Dependency {
    constructor(definition, options = {}) {
        super(definition, options);
        this.definition = definition;
    }
    loadVersion() {
        return this.run({ args: this.versionArgs }).then(({ stdout, exitCode, stderr }) => {
            return stdout || stderr;
        });
    }
    get versionArgs() {
        return this.definition.versionArgs || ["--version"];
    }
    run({ args, options = {}, stdin, }) {
        return this.resolveArgs(args).then(finalArgs => this.spawn({ exe: this.pathOrProgram, args: finalArgs, options, stdin }));
    }
    resolveArgs(args) {
        return Promise.all(args).then(resolvedArgs => resolvedArgs.filter(Boolean));
    }
    get pathOrProgram() {
        return this.programPath || this.program;
    }
    get program() {
        return this.definition.program;
    }
    get programPath() {
        return this.options.path;
    }
    spawn({ exe, args, options, stdin, }) {
        return new Promise((resolve, reject) => {
            // tslint:disable-next-line:no-require-imports
            const spawn = require("child_process").spawn;
            const cmd = spawn(exe, args, Object.assign({}, options, { env: Object.assign({}, process.env, (options.env || {})) }));
            let stdout = "";
            let stderr = "";
            cmd.stdout.on("data", data => {
                return (stdout += data);
            });
            cmd.stderr.on("data", data => {
                return (stderr += data);
            });
            cmd.on("close", exitCode => {
                return resolve({ exitCode, stdout, stderr });
            });
            cmd.on("error", err => {
                return reject(err);
            });
            if (stdin) {
                cmd.stdin.end(stdin);
            }
        });
    }
}
exports.ExecutableDependency = ExecutableDependency;
//# sourceMappingURL=ExecutableDependency.js.map