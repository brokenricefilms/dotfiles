"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Dependency_1 = require("./Dependency");
class NodeDependency extends Dependency_1.Dependency {
    constructor(definition, options = {}) {
        super(definition, options);
        this.definition = definition;
    }
    loadVersion() {
        try {
            return Promise.resolve(this.require("package.json").version);
        }
        catch (error) {
            return Promise.reject(error);
        }
    }
    // tslint:disable-next-line:no-reserved-keywords
    get package() {
        return this.require();
    }
    // tslint:disable-next-line:no-reserved-keywords
    require(id) {
        const path = this.fullPath(id);
        const modulePath = this.resolve(path);
        if (modulePath) {
            // tslint:disable-next-line:no-require-imports non-literal-require
            return require(modulePath);
        }
        else {
            throw new Error(`Cannot find module ${path}`);
        }
    }
    resolve(path) {
        return this.resolveLocal(path) || this.resolveGlobal(path);
    }
    resolveLocal(path) {
        return this.resolveWith(require.resolve)(path);
    }
    resolveGlobal(path) {
        // tslint:disable-next-line:no-require-imports no-var-requires
        const requireg = require("requireg");
        return this.resolveWith(requireg.resolve)(path);
    }
    resolveWith(resolver) {
        return (path) => {
            try {
                return resolver(path);
            }
            catch (error) {
                return undefined;
            }
        };
    }
    fullPath(filePath) {
        if (filePath) {
            return `${this.packageName}/${filePath}`;
        }
        return this.packageName;
    }
    get packageName() {
        return this.definition.package;
    }
}
exports.NodeDependency = NodeDependency;
//# sourceMappingURL=NodeDependency.js.map