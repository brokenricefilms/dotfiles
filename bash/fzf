#!/usr/bin/env bash

emoji() {
  if hash emoji-fzf 2>/dev/null; then
    emoji-fzf preview --prepend |
      fzf_down |
      awk '{ print $1 }' | tr -d "\n" | clip.exe
  else
    pip install emoji-fzf
    emoji-fzf preview --prepend |
      fzf_down |
      awk '{ print $1 }' |
      tr -d "\n" |
      clip.exe
  fi
}
alias ej="emoji"

fzf_down() {
  fzf --height 50% --min-height 20 --reverse
}

h() {
  local command
  command=$(\cat ~/.bash_history | fzf_down)
  $command
}

find_file() {
  local file
  file=$(fd . -t f --exclude .git --exclude undodir --exclude gems --exclude node_modules --exclude go --exclude app --exclude gems | fzf_down --preview 'bat --style=numbers --color=always --line-range :500 {}')
  if [ ! -z "$file" ]; then
    nvim "$file"
  fi
}
alias f='find_file'

open_file() {
  local object
  object=$(fd . --exclude .git --exclude undodir --exclude gems --exclude node_modules --exclude go --exclude app --exclude gems | fzf_down --preview 'bat --style=numbers --color=always --line-range :500 {}')
  if [ ! -z "$object" ]; then
    xdg-open "$object"
  fi
}
alias o='open_file'

change_dir() {
  local dir
  dir=$(fd -t d . --exclude .git --exclude undodir --exclude gems --exclude node_modules --exclude go --exclude app --exclude gems | fzf_down --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ",  $2} {print  $1}\' | xargs -r exa -aT --color=always --group-directories-first --icons -L 1')
  cd "$dir"

  ls
}
alias c='change_dir'

alias vi="nvim"
alias vim="nvim"

find_file_edit_in_nvim() {
  if [ ! -n "$1" ]; then
    find_file
  else
    nvim "$1"
  fi
}
alias e='find_file_edit_in_nvim'
alias v='find_file_edit_in_nvim'
